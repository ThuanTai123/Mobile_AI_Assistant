pluginManagement {
  def reactNativeGradlePluginPath = new ByteArrayOutputStream()
  exec {
    commandLine "node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
    standardOutput = reactNativeGradlePluginPath
  }
  def reactNativeGradlePlugin = new File(reactNativeGradlePluginPath.toString().trim()).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)

  def expoPluginsPathOut = new ByteArrayOutputStream()
  exec {
    commandLine "node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })"
    standardOutput = expoPluginsPathOut
  }
  def expoPluginsPath = new File(expoPluginsPathOut.toString().trim(), "../android/expo-gradle-plugin").absolutePath
  includeBuild(expoPluginsPath)
}

plugins {
  id("com.facebook.react.settings")
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()
expoAutolinking.useExpoVersionCatalog()

rootProject.name = 'Ruby_Assistant'

include ':app'
includeBuild(expoAutolinking.reactNativeGradlePlugin)
